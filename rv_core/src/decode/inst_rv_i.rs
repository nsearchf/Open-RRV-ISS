// Copyright (c) 2024, zhao.shaowei <nsearchf@yeah.net>
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

/* Automatically generated by parse_opcodes */
pub(crate) const MATCH_ADD: u32 = 0x33;
pub(crate) const MASK_ADD: u32 = 0xfe00707f;
pub(crate) const MATCH_ADDI: u32 = 0x13;
pub(crate) const MASK_ADDI: u32 = 0x707f;
pub(crate) const MATCH_AND: u32 = 0x7033;
pub(crate) const MASK_AND: u32 = 0xfe00707f;
pub(crate) const MATCH_ANDI: u32 = 0x7013;
pub(crate) const MASK_ANDI: u32 = 0x707f;
pub(crate) const MATCH_AUIPC: u32 = 0x17;
pub(crate) const MASK_AUIPC: u32 = 0x7f;
pub(crate) const MATCH_BEQ: u32 = 0x63;
pub(crate) const MASK_BEQ: u32 = 0x707f;
pub(crate) const MATCH_BGE: u32 = 0x5063;
pub(crate) const MASK_BGE: u32 = 0x707f;
pub(crate) const MATCH_BGEU: u32 = 0x7063;
pub(crate) const MASK_BGEU: u32 = 0x707f;
pub(crate) const MATCH_BLT: u32 = 0x4063;
pub(crate) const MASK_BLT: u32 = 0x707f;
pub(crate) const MATCH_BLTU: u32 = 0x6063;
pub(crate) const MASK_BLTU: u32 = 0x707f;
pub(crate) const MATCH_BNE: u32 = 0x1063;
pub(crate) const MASK_BNE: u32 = 0x707f;
pub(crate) const MATCH_EBREAK: u32 = 0x100073;
pub(crate) const MASK_EBREAK: u32 = 0xffffffff;
pub(crate) const MATCH_ECALL: u32 = 0x73;
pub(crate) const MASK_ECALL: u32 = 0xffffffff;
pub(crate) const MATCH_FENCE: u32 = 0xf;
pub(crate) const MASK_FENCE: u32 = 0x707f;
pub(crate) const MATCH_JAL: u32 = 0x6f;
pub(crate) const MASK_JAL: u32 = 0x7f;
pub(crate) const MATCH_JALR: u32 = 0x67;
pub(crate) const MASK_JALR: u32 = 0x707f;
pub(crate) const MATCH_LB: u32 = 0x3;
pub(crate) const MASK_LB: u32 = 0x707f;
pub(crate) const MATCH_LBU: u32 = 0x4003;
pub(crate) const MASK_LBU: u32 = 0x707f;
pub(crate) const MATCH_LH: u32 = 0x1003;
pub(crate) const MASK_LH: u32 = 0x707f;
pub(crate) const MATCH_LHU: u32 = 0x5003;
pub(crate) const MASK_LHU: u32 = 0x707f;
pub(crate) const MATCH_LUI: u32 = 0x37;
pub(crate) const MASK_LUI: u32 = 0x7f;
pub(crate) const MATCH_LW: u32 = 0x2003;
pub(crate) const MASK_LW: u32 = 0x707f;
pub(crate) const MATCH_OR: u32 = 0x6033;
pub(crate) const MASK_OR: u32 = 0xfe00707f;
pub(crate) const MATCH_ORI: u32 = 0x6013;
pub(crate) const MASK_ORI: u32 = 0x707f;
pub(crate) const MATCH_SB: u32 = 0x23;
pub(crate) const MASK_SB: u32 = 0x707f;
pub(crate) const MATCH_SH: u32 = 0x1023;
pub(crate) const MASK_SH: u32 = 0x707f;
pub(crate) const MATCH_SLL: u32 = 0x1033;
pub(crate) const MASK_SLL: u32 = 0xfe00707f;
pub(crate) const MATCH_SLT: u32 = 0x2033;
pub(crate) const MASK_SLT: u32 = 0xfe00707f;
pub(crate) const MATCH_SLTI: u32 = 0x2013;
pub(crate) const MASK_SLTI: u32 = 0x707f;
pub(crate) const MATCH_SLTIU: u32 = 0x3013;
pub(crate) const MASK_SLTIU: u32 = 0x707f;
pub(crate) const MATCH_SLTU: u32 = 0x3033;
pub(crate) const MASK_SLTU: u32 = 0xfe00707f;
pub(crate) const MATCH_SRA: u32 = 0x40005033;
pub(crate) const MASK_SRA: u32 = 0xfe00707f;
pub(crate) const MATCH_SRL: u32 = 0x5033;
pub(crate) const MASK_SRL: u32 = 0xfe00707f;
pub(crate) const MATCH_SUB: u32 = 0x40000033;
pub(crate) const MASK_SUB: u32 = 0xfe00707f;
pub(crate) const MATCH_SW: u32 = 0x2023;
pub(crate) const MASK_SW: u32 = 0x707f;
pub(crate) const MATCH_XOR: u32 = 0x4033;
pub(crate) const MASK_XOR: u32 = 0xfe00707f;
pub(crate) const MATCH_XORI: u32 = 0x4013;
pub(crate) const MASK_XORI: u32 = 0x707f;
